{"version":3,"sources":["components/AddContact/index.js","components/EditContact/index.js","components/Home/index.js","components/Navbar/index.js","App.js","redux/reducers/contactReducer.js","index.js"],"names":["AddPost","contacts","useSelector","state","useState","name","setName","email","setEmail","phone","setPhone","history","useHistory","dispatch","useDispatch","className","onSubmit","e","preventDefault","checkContactEmailExists","filter","contact","checkContactPhoneExists","toast","warning","length","error","data","id","type","payload","success","push","placeholder","value","onChange","target","EditContact","useParams","currentContact","find","parseInt","useEffect","onClick","Home","searchTxt","setSearchTxt","filterContact","setFilterContact","allContacts","setAllContacts","to","toLowerCase","console","log","item","includes","filterData","scope","map","Navbar","App","exact","path","component","initialState","store","createStore","action","contactFilter","contactUpdate","Object","assign","composeWithDevTools","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.f835f9a5.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport { toast } from \"react-toastify\";\n\nconst AddPost = () => {\n  const contacts = useSelector((state)=>state);\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n\n  const history = useHistory();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const checkContactEmailExists = contacts.filter((contact) =>\n      contact.email === email ? contact : null\n    );\n    const checkContactPhoneExists = contacts.filter((contact) =>\n      contact.phone === phone ? contact : null\n    );\n\n    if (!email || !name || !phone) {\n      return toast.warning(\"Please fill in all fields!!\");\n    }\n    if (checkContactEmailExists.length > 0) {\n      return toast.error(\"This email already exists!!\");\n    }\n    if (checkContactPhoneExists.length > 0) {\n      return toast.error(\"This phone number already exists!!\");\n    }\n\n    const data = {\n      id: contacts.length > 0 ? contacts[contacts.length - 1].id + 1 : 0,\n      email,\n      name,\n      phone,\n    };\n\n    dispatch({ type: \"ADD_CONTACT\", payload: data });\n    toast.success(\"Contact added successfully!!\");\n    history.push(\"/\");\n  };\n  const dispatch = useDispatch();\n\n\n  return (\n    <div className=\"container-fluid\">\n      <h1 className=\"text-center text-dark py-3 display-2\">Add New Contact</h1>\n      <div className=\"row\">\n        <div className=\"col-md-6 p-5 mx-auto shadow\">\n          <form onSubmit={handleSubmit}>\n            <div className=\"form-group\">\n              <input\n                className=\"form-control\"\n                type=\"text\"\n                placeholder=\"Full name\"\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n              />\n            </div>\n            <div className=\"form-group\">\n              <input\n                className=\"form-control\"\n                type=\"email\"\n                placeholder=\"Email\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n              />\n            </div>\n            <div className=\"form-group\">\n              <input\n                className=\"form-control\"\n                type=\"number\"\n                placeholder=\"Phone\"\n                value={phone}\n                onChange={(e) => setPhone(e.target.value)}\n              />\n            </div>\n            <div className=\"form-group\">\n              <input\n                className=\"btn btn-block btn-dark\"\n                type=\"submit\"\n                value=\"Add Student\"\n              />\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\n\n\nexport default AddPost;\n","import React, { useEffect, useState } from \"react\";\nimport { useDispatch ,useSelector} from \"react-redux\";\nimport { useHistory, useParams } from \"react-router\";\nimport { toast } from \"react-toastify\";\n\nconst EditContact = () => {\n  const contacts = useSelector((state)=>state);\n\n  const dispatch = useDispatch();\n  const { id } = useParams();\n  const history = useHistory();\n  const currentContact = contacts.find(\n    (contact) => contact.id === parseInt(id)\n  );\n\n  useEffect(() => {\n    setName(currentContact.name);\n    setEmail(currentContact.email);\n    setPhone(currentContact.phone);\n  }, [currentContact]);\n\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const checkContactEmailExists = contacts.filter((contact) =>\n      contact.email === email && contact.id !== currentContact.id\n        ? contact\n        : null\n    );\n    const checkContactPhoneExists = contacts.filter((contact) =>\n      contact.phone === phone && contact.id !== currentContact.id\n        ? contact\n        : null\n    );\n\n    if (!email || !name || !phone) {\n      return toast.warning(\"Please fill in all fields!!\");\n    }\n    if (checkContactEmailExists.length > 0) {\n      return toast.error(\"This email already exists!!\");\n    }\n    if (checkContactPhoneExists.length > 0) {\n      return toast.error(\"This phone number already exists!!\");\n    }\n\n    const data = {\n      id: currentContact.id,\n      email,\n      name,\n      phone,\n    };\n\n    dispatch({ type: \"UPDATE_CONTACT\", payload: data });\n    toast.success(\"Contact updated successfully!!\");\n    history.push(\"/\");\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"row d-flex flex-column\">\n        <button\n          className=\"btn btn-dark ml-auto my-5\"\n          onClick={() => history.push(\"/\")}\n        >\n          Go back\n        </button>\n        <div className=\"col-md-6 mx-auto shadow p-5\">\n          {currentContact ? (\n            <form onSubmit={handleSubmit}>\n              <div className=\"form-group\">\n                <input\n                  className=\"form-control\"\n                  value={name}\n                  placeholder={\"Name\"}\n                  onChange={(e) => setName(e.target.value)}\n                />\n              </div>\n              <div className=\"form-group\">\n                <input\n                  className=\"form-control\"\n                  value={email}\n                  placeholder={\"Email\"}\n                  onChange={(e) => setEmail(e.target.value)}\n                />\n              </div>\n              <div className=\"form-group\">\n                <input\n                  className=\"form-control\"\n                  value={phone}\n                  placeholder={\"Phone\"}\n                  onChange={(e) => setPhone(e.target.value)}\n                />\n              </div>\n              <div className=\"form-group d-flex align-items-center justify-content-between my-2\">\n                <button type=\"submit\" className=\"btn btn-primary\">\n                  Update Contact\n                </button>\n                <button\n                  type=\"button\"\n                  className=\"btn btn-danger\"\n                  onClick={() => history.push(\"/\")}\n                >\n                  cancel\n                </button>\n              </div>\n            </form>\n          ) : (\n            <h1 className=\"text-center\">No Contact Found</h1>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\n\n\n\nexport default EditContact;\n","import React,{useState,useEffect} from \"react\";\nimport { useDispatch,useSelector } from \"react-redux\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\n\n\nconst Home = () => {\n  const contacts = useSelector((state)=>state);\n\n  const dispatch = useDispatch();\n  const [searchTxt,setSearchTxt] = useState('');\n  const [filterContact,setFilterContact] = useState([]);\n  const [allContacts,setAllContacts] = useState([]);\n  const filterData = (searchTxt, contacts) => {\n    searchTxt = searchTxt.toLowerCase();\n    console.log(contacts.filter((item) => item?.name?.toLowerCase().includes(searchTxt)))\n    return contacts.filter((item) => item?.name?.toLowerCase().includes(searchTxt));\n  };\n  \n\n  useEffect(() => {\n    if (searchTxt === \"\") {\n      setFilterContact(allContacts);\n    }\n  }, [searchTxt]);\n  useEffect(()=>{\n    setAllContacts(contacts);\n    setFilterContact(contacts);\n  },[contacts]);\n\n  return (\n    <div className=\"container\">\n      <div className=\"row d-flex flex-column\">\n        <Link to=\"/add\" className=\"btn btn-outline-dark my-5 ml-auto \">\n          Add Contact\n        </Link>\n        <div className=\"search-container\">\n        <input\n          type=\"text\"\n          className=\"search-input\"\n          placeholder=\"Search\"\n          value={searchTxt}\n          onChange={(e) => setSearchTxt(e.target.value)}\n        />\n        <button\n          className=\"search-btn\"\n          onClick={() => {\n            const data = filterData(searchTxt, allContacts);\n            setFilterContact(data);\n          }}\n        >\n          Search\n        </button>\n      </div>\n\n        <div className=\"col-md-12 mx-auto my-4\">\n          <table className=\"table table-hover\">\n            <thead className=\"table-header bg-dark text-white\">\n              <tr>\n                <th scope=\"col\">Id</th>\n                <th scope=\"col\">Name</th>\n                <th scope=\"col\">Email</th>\n                <th scope=\"col\">Phone</th>\n                <th scope=\"col\">Actions</th>\n              </tr>\n            </thead>\n            <tbody>\n              {filterContact.length > 0 ? (\n                                \n                filterContact.map((contact, id) => (\n                  <tr key={id}>\n                    <td>{id + 1}</td>\n                    <td>{contact.name}</td>\n                    <td>{contact.email}</td>\n                    <td>{contact.phone}</td>\n                    <td>\n                      <Link\n                        to={`/edit/${contact.id}`}\n                        className=\"btn btn-sm btn-primary mr-1\"\n                      >\n                        Edit\n                      </Link>\n                      <button\n                        type=\"button\"\n                        onClick={() => {dispatch({ type: \"DELETE_CONTACT\", payload: contact.id });\n                        toast.success(\"Contact Deleted !!\")}}\n                        className=\"btn btn-sm btn-danger\"\n                      >\n                        Delete\n                      </button>\n                    </td>\n                  </tr>\n                ))\n              ) : (\n                <tr>\n                  <th>No contacts found</th>\n                </tr>\n              )}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  );\n};\n\n\n\n\nexport default Home;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Navbar = () => {\n  return (\n    <div className=\"col-md-12 bg-dark py-2\">\n      <nav className=\"navbar bg-dark navbar-dark\">\n        <Link to={\"/\"} className=\"navbar-brand ml-5\">\n          CRUD Contact App With Redux\n        </Link>\n      </nav>\n    </div>\n  );\n};\n\nexport default Navbar;\n","import React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { ToastContainer } from \"react-toastify\";\nimport AddPost from \"./components/AddContact\";\nimport EditContact from \"./components/EditContact\";\nimport Home from \"./components/Home\";\nimport Navbar from \"./components/Navbar\";\nimport \"./styles.css\";\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <ToastContainer />\n      <Navbar />\n      <Route exact path=\"/\" component={() => <Home />} />\n      <Route exact path=\"/add\" component={() => <AddPost />} />\n      <Route exact path=\"/edit/:id\" component={() => <EditContact />} />\n    </div>\n  );\n};\nexport default App;\n","const initialState = [\n  { id: 0, name: \"Himanshu Singh\", email: \"himanshusingh11@gmail.com\", phone: 1234567890 },\n  { id: 1, name: \"Test User\", email: \"test_user@test.com\", phone:1234561233 },\n];\n\nexport const contactReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"ADD_CONTACT\":\n      state = [...state, action.payload];\n      return state;\n    case \"DELETE_CONTACT\":\n      const contactFilter = state.filter((contact) =>\n        contact.id === action.payload ? null : contact\n      );\n      state = contactFilter;\n      return state;\n    case \"UPDATE_CONTACT\":\n      const contactUpdate = state.filter((contact) =>\n        contact.id === action.payload.id\n          ? Object.assign(contact, action.payload)\n          : contact\n      );\n      state = contactUpdate;\n      return state;\n    case \"RESET_CONTACT\":\n      state = [{ name: null, email: null, phone: null }];\n      return state;\n    default:\n      return state;\n  }\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport \"react-toastify/dist/ReactToastify.css\";\n\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport { contactReducer } from \"./redux/reducers/contactReducer\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\nconst store = createStore(contactReducer, composeWithDevTools());\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>,\n  rootElement\n);\n"],"sourceRoot":""}